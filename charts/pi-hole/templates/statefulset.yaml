apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pi-hole.fullname" . }}
  labels:
    {{- include "pi-hole.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
metadata:
  name: pi-hole
spec:
  selector:
    matchLabels:
      {{- include "pi-hole.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "pi-hole.fullname" . }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "pi-hole.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: pi-hole
        image:  "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
          {{- toYaml .Values.env | nindent 12 }}
        ports:
        - containerPort: 53
          name:  udp-53
          protocol: UDP
        - containerPort: 53
          name:  tcp-53
          protocol: TCP
        - containerPort: 80
          name:  http
        - containerPort: 443
          name:  https
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - name: pi-hole-data
          mountPath: /etc/pihole
        {{ end }}
      restartPolicy: Always
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: pi-hole-data
    spec:
      {{- if .Values.persistence.storageClassName }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{ end }}
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.storageSize }}
  {{ end }}